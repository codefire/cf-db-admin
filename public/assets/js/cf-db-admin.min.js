function MainConfig(a,b,c){a.when("/Databases/",{templateUrl:"/cf-templates/Databases.html",controller:"DatabaseController",controllerAs:"databaseCtrl","public":!1}).when("/Databases/:database/Tables/",{templateUrl:"/cf-templates/Tables.html",controller:"TableController",controllerAs:"tableCtrl","public":!1}).when("/Databases/:database/Tables/:table/",{templateUrl:"/cf-templates/Fields.html",controller:"FieldsController",controllerAs:"fieldCtrl","public":!1}).when("/Databases/:database/Tables/:table/browse/",{templateUrl:"/cf-templates/Browse.html",controller:"BrowseController",controllerAs:"browseCtrl","public":!1}).when("/log-in/",{templateUrl:"/cf-templates/Log-In.html",controller:"LoginController",controllerAs:"loginCtrl","public":!0}),b.html5Mode(!0),c.interceptors.push("CodeFireHttpInterceptor")}function RequestWrapper(a,b,c){return{foreground:function(){return arguments&&arguments[0]&&("undefined"!=typeof arguments[0].data&&arguments[0].data||(arguments[0].data={}),arguments[0].url=c.apiUrl+c.apiType+"/"+arguments[0].endPoint,arguments[0].loadType="foreground",arguments[0].data.auth=b),a.apply(a,arguments)},background:function(){return arguments&&arguments[0]&&("undefined"!=typeof arguments[0].data&&arguments[0].data||(arguments[0].data={}),arguments[0].url=c.apiUrl+c.apiType+"/"+arguments[0].endPoint,arguments[0].loadType="background",arguments[0].data.auth=b),a.apply(a,arguments)},invisible:function(){return arguments&&arguments[0]&&("undefined"!=typeof arguments[0].data&&arguments[0].data||(arguments[0].data={}),arguments[0].url=c.apiUrl+c.apiType+"/"+arguments[0].endPoint,arguments[0].loadType="invisible",arguments[0].data.auth=b),a.apply(a,arguments)}}}function Navigation(a){return{showView:!0,params:[],redirectTo:null,loadParams:function(a){return this.params=a,this},redirect:function(){this.redirectTo&&a.url(this.redirectTo),this.redirectTo=null}}}function TokenService(){return{token:null}}function SettingService(){return{apiUrl:"/api/",apiType:"php"}}function Notify(a,b){return{errors:[],warnings:[],messages:[],error:function(a,b){return this.errors.push({message:a}),this.stackErrors(b)},warning:function(a){return this.warnings.push({message:a})},info:function(a){return this.messages.push({message:a})},message:function(a){return this.info(a)},stackErrors:function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t;if("object"==typeof a||"array"==typeof a){if(a.errors)for(o=a.errors,e=0,i=o.length;i>e;e++)b=o[e],this.errors.push({message:b});if(a.warnings)for(p=a.warnings,f=0,j=p.length;j>f;f++)d=p[f],this.warning(d);if(a.messages)for(q=a.messages,g=0,k=q.length;k>g;g++)c=q[g],this.info(c);if(a.notices)for(r=a.notices,h=0,l=r.length;l>h;h++)c=r[h],this.info(c);if(a.infos){for(s=a.infos,t=[],n=0,m=s.length;m>n;n++)c=s[n],t.push(this.info(c));return t}}},loading:function(a,b){var c;return c="#loading-foreground","invisible"===a?!0:("background"===a&&(c="#loading-background"),1!==b&&b!==!0&&(b=0),angular.element(c).toggleClass("showing"))},notFound:function(a){this.error("API end Point "+a+" could not be found at "+b.apiUrl+b.apiType+"/"+a)},clear:function(){this.errors=[],this.warnings=[],this.messages=[]}}}function HttpInterceptor(a,b){return{request:function(c){return b.clear(),b.loading(c.loadType,1),c||a.when(c)},requestError:function(c){return b.stackErrors(c.data),a.reject(c)},response:function(c){var d="";if("undefined"!=typeof c.headers()["content-type"]&&(d=c.headers()["content-type"]),-1!=d.indexOf("application/json"))b.stackErrors(c.data);else if("undefined"!=typeof c.config&&"undefined"!=typeof c.config.endPoint&&-1!=c.config.endPoint.indexOf(".json")&&-1==c.headers()["content-type"].indexOf("json"))return b.error("API "+c.config.endPoint+" Returned non-JSON response",{},c.status),a.reject(c);return c},responseError:function(c){return b.loading(c.config.loadType,0),404==c.status?b.notFound(c.config.endPoint):b.error(c.statusText,c.data,c.status),a.reject(c)}}}function AuthService(a,b,c,d,e){return{loggedIn:!1,bucket:c,login:function(a){var b=this;d.foreground({method:"post",endPoint:"log-in.json",data:{credentials:a}}).success(function(a){b.postLogin(a)}).error(function(){b.logout()})},postLogin:function(a){var c=this;1==a.payload.loggedIn?(c.loggedIn=!0,c.bucket.token=a.payload.token,b.cfToken=c.bucket.token,e.redirect()):c.logout()},logout:function(){d.invisible({method:"post",endPoint:"log-out.json"}).success(function(){}).error(function(){}),this.loggedIn=!1,this.bucket.token=null,delete b.cfToken},isLoggedIn:function(c){var f=this;"undefined"==typeof c&&(c=!0);var g=b.cfToken;return"undefined"!=typeof g&&0==this.loggedIn&&(this.loggedIn=!0,this.bucket.token=g,d.invisible({method:"post",endPoint:"log-in.json",data:{token:this.bucket.token}}).success(function(a){f.postLogin(a)}).error(function(){f.logout()})),0==this.loggedIn&&1==c&&(e.redirectTo=a.path(),a.url("/log-in/")),this.loggedIn}}}function MainController(a,b,c,d,e,f,g,h,i){var j;j=this,j.debug="If you can see this, then MainController is working :)",j.dataLoaded=!1,j.location=e,j.route=c,j.errors=[],j.navigation=f,j.navigation.loadParams(d),j.auth=g,j.notifications=i,j.settings=h,g.isLoggedIn(),j.logout=function(){g.logout(),e.url("/log-in/")}}function DatabaseController(a,b,c,d,e,f,g){var h;h=this,h.debug="If you can see this, then DatabaseController is working :)",h.dataLoaded=!1,h.location=e.path(),h.errors=[],h.navigation=f,h.navigation.loadParams(d),h.databases=[],g.isLoggedIn(),h.loadDatabases=function(){b.foreground({method:"post",endPoint:"databases.json",data:{loginData:"test"}}).success(function(a){h.databases=a.payload.databases}).error(function(){})},h.loadDatabases()}function TableController(a,b,c,d,e,f,g){var h;h=this,h.debug="If you can see this, then TableController is working :)",h.dataLoaded=!1,h.location=e.path(),h.errors=[],h.navigation=f,h.navigation.loadParams(d),h.tables=[],g.isLoggedIn(),h.loadTables=function(){b.foreground({method:"post",endPoint:"tables.json",data:{database:h.navigation.params.database}}).success(function(a){h.tables=a.payload.tables}).error(function(){})},h.loadTables()}function FieldsController(a,b,c,d,e,f,g){var h;h=this,h.debug="If you can see this, then FieldsController is working :)",h.dataLoaded=!1,h.location=e.path(),h.errors=[],h.navigation=f,h.navigation.loadParams(d),h.fields=[],g.isLoggedIn(),h.loadFields=function(){b.foreground({method:"post",endPoint:"fields.json",data:{database:h.navigation.params.database,table:h.navigation.params.table}}).success(function(a){h.fields=a.payload.fields}).error(function(){})},h.loadFields()}function BrowseController(a,b,c,d,e,f,g,h){var i;i=this,i.debug="If you can see this, then BrowseController is working :)",i.dataLoaded=!1,i.location=f.path(),i.errors=[],i.navigation=g,i.navigation.loadParams(e),i.table={fields:[],pagination:{page:1,perPage:30},rows:[]},h.isLoggedIn(),i.loadTable=function(){c.foreground({method:"post",endPoint:"browse.json",data:{database:i.navigation.params.database,table:i.navigation.params.table,page:i.table.pagination.page,perPage:i.table.pagination.perPage}}).success(function(a){i.table=a.payload,i.dataLoaded=!0}).error(function(){})},i.changePage=function(){i.loadTable()},i.loadTable()}function cfPagination(){var a={restrict:"E",templateUrl:"/cf-templates/directives/cf-pagination.html",scope:{pagination:"=",callback:"="},controller:cfPaginationController,controllerAs:"ctrl",bindToController:!0};return a}function cfPaginationController(a){var b=this;b.debug="hello from cfPaginationController",b.pagination={},a.$watch("ctrl.pagination",function(a,c){return c==a?!1:void b.buildPagination()}),b.buildPagination=function(){for(var a=4,c=b.pagination.page,d=b.pagination.pages,e=b.pagination.pages-1,f=[1],g=1;a>=g;g++){var h=c-g;h>1&&f.push(h)}c>1&&d>c&&f.push(c);for(var g=1;a>=g;g++){var h=c+g;e>h&&f.push(h)}f.push(d),b.pagination.numbers=f},b.selectPage=function(a){return 1>a||a>b.pagination.pages?!1:(b.pagination.page=a,void b.callback(a))}}function LoginController(a,b,c,d,e,f,g){var h;h=this,h.debug="If you can see this, then LoginController is working :)",h.dataLoaded=!1,h.location=e.path(),h.errors=[],h.Navigation=f,h.username="demoUser",h.password="123456789",h.login=function(){g.login({username:h.username,password:h.password}),1==g.isLoggedIn(!1)&&e.url("/Databases/")}}angular.module("cf-db",["ngRoute","ngCookies","cf-templates"]).config(MainConfig).factory("Settings",SettingService).factory("Token",TokenService).factory("CodeFireHttpInterceptor",HttpInterceptor).factory("Notify",Notify).factory("Request",RequestWrapper).factory("Navigation",Navigation).factory("AuthService",AuthService).controller("MainController",MainController).controller("DatabaseController",DatabaseController).controller("TableController",TableController).controller("FieldsController",FieldsController).controller("BrowseController",BrowseController).directive("cfPagination",cfPagination),RequestWrapper.$inject=["$http","Token","Settings"],AuthService.$inject=["$location","$cookies","Token","Request","Navigation","Notify"],MainController.$inject=["$window","Request","$route","$routeParams","$location","Navigation","AuthService","Settings","Notify"],DatabaseController.$inject=["$window","Request","$route","$routeParams","$location","Navigation","AuthService"],TableController.$inject=["$window","Request","$route","$routeParams","$location","Navigation","AuthService"],FieldsController.$inject=["$window","Request","$route","$routeParams","$location","Navigation","AuthService"],BrowseController.$inject=["$window","$scope","Request","$route","$routeParams","$location","Navigation","AuthService"],cfPaginationController.$inject=["$scope"],angular.module("cf-templates",["/cf-templates/Browse.html","/cf-templates/Databases.html","/cf-templates/Fields.html","/cf-templates/Log-In.html","/cf-templates/Tables.html","/cf-templates/directives/cf-pagination.html"]),angular.module("/cf-templates/Browse.html",[]).run(["$templateCache",function(a){a.put("/cf-templates/Browse.html",'<h1>Browse</h1>\n\n<div ng-show="browseCtrl.table">\n\n    <p>Browsing table : <strong>{{browseCtrl.table.name}}</strong> - showing <strong>{{browseCtrl.table.pagination.showing}}</strong> rows of <strong>{{browseCtrl.table.pagination.total}}</strong></p>\n\n    <div ng-show="browseCtrl.table.pagination.pages > 1">\n        <cf-pagination pagination="browseCtrl.table.pagination" callback="browseCtrl.changePage"></cf-pagination>\n    </div>\n\n    <table border="1">\n        <thead>\n            <tr>\n                <th ng-repeat="field in browseCtrl.table.fields">\n                    {{field.name}}\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat="row in browseCtrl.table.rows">\n                <td ng-repeat="cell in row">\n                    {{cell.value}}\n                </td>\n            </tr>\n        </tbody>\n    </table>\n\n</div>')}]),angular.module("/cf-templates/Databases.html",[]).run(["$templateCache",function(a){a.put("/cf-templates/Databases.html",'<div class="row squeeze-up push-down">\n    <div class="columns large-6">\n        <!--<ul>-->\n            <!--<li>debug : {{databaseCtrl.debug}}</li>-->\n        <!--</ul>-->\n        <a href="#" class="button left"><i class="fi-plus"></i> Create Database</a>\n    </div>\n\n    <div class="columns large-6">\n        <a href="#" ng-click="gridView=true" class="button right"><i class="fi-thumbnails"></i> Grid View</a>\n        <a href="#" ng-click="gridView=false" class="button right"><i class="fi-list"></i> List View</a>\n    </div>\n</div>\n\n<ul>\n    <li ng-repeat="(name, param) in databaseCtrl.params">\n        <pre>{{name}} = {{param}}</pre>\n    </li>\n</ul>\n\n<div ng-show="gridView">\n    <div class="row">\n\n        <div class="large-3 small-6 columns left cf-grid-box" ng-repeat="database in databaseCtrl.databases">\n            <div class="row">\n            <h4 class="cf-db-name"><a href="Databases/{{database.name}}/Tables"></a>{{database.name}}</h4>\n            </div>\n            <div class="row">\n            <h5 class="cf-db-table-count">{{database.tableCount}} tables</h5>\n            </div>\n            <div class="row">\n                <div class="small-6 columns">\n                    <a href="Databases/{{database.name}}/Tables"><i class="fi-pencil"></i></a>\n                </div>\n                <div class="small-6 columns">\n                    <i class="fi-x"></i>\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n    <h5 class="primary-color">The idea is that users would be able to colour code their databases in their own colours if they wanted :)</h5>\n</div>\n\n<div ng-show="!gridView">\n        <table>\n            <thead>\n            <tr>\n                <th width="350">Database</th>\n                <th width="100" class="text-center">Tables</th>\n                <th width="150"></th>\n                <th width="150"></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr ng-repeat="database in databaseCtrl.databases">\n                <td>{{database.name}}</td>\n                <td class="text-center">{{database.tableCount}}</td>\n                <td class="text-center"><a href="Databases/{{database.name}}/Tables"><i class="fi-pencil"></i></a></td>\n                <td class="text-center"><i class="fi-x"></i></td>\n            </tr>\n            </tbody>\n        </table>\n\n    <h5 class="primary-color">This is the boring standard view. Users will be able to choose which view to load on default. Click the grid button!</h5>\n</div>\n\n<script>\n    $(document).foundation();\n</script>')}]),angular.module("/cf-templates/Fields.html",[]).run(["$templateCache",function(a){a.put("/cf-templates/Fields.html",'<h2>Fields template</h2>\n<ul>\n    <li>debug : {{fieldCtrl.debug}}</li>\n</ul>\n\n<div ng-show="fieldCtrl.fields">\n    <ul>\n        <li ng-repeat="field in fieldCtrl.fields">\n           {{field.name}} - {{field.type}}\n        </li>\n    </ul>\n</div>\n')}]),angular.module("/cf-templates/Log-In.html",[]).run(["$templateCache",function(a){a.put("/cf-templates/Log-In.html",'<h1>Log In</h1>\n\n<div ng-show="!main.auth.loggedIn">\n    <p>This is a temporary login form, just use the sample credentials provided for now.</p>\n    <ul>\n        <li>\n            <label for="username">Username : </label>\n            <input type="text" id="username" ng-model="loginCtrl.username"/>\n        </li>\n        <li>\n            <label for="password">Password : </label>\n            <input type="password" id="password" ng-model="loginCtrl.password"/>\n        </li>\n    </ul>\n    <button class="button" ng-click="loginCtrl.login()">Log in</button>\n</div>\n\n<div ng-show="main.auth.loggedIn">\n    <p>You are now logged in :)</p>\n</div>\n')}]),angular.module("/cf-templates/Tables.html",[]).run(["$templateCache",function(a){a.put("/cf-templates/Tables.html",'<h2>Tables template</h2>\n<ul>\n    <li>debug : {{tableCtrl.debug}}</li>\n</ul>\n\n<div ng-show="tableCtrl.tables">\n    <ul>\n        <li ng-repeat="table in tableCtrl.tables">\n            {{table.name}} -\n            <a href="/Databases/{{tableCtrl.navigation.params.database}}/Tables/{{table.name}}/">Structure</a>\n            -\n            <a href="/Databases/{{tableCtrl.navigation.params.database}}/Tables/{{table.name}}/browse/">Browse</a>\n        </li>\n    </ul>\n</div>\n\n<ul>\n    <li ng-repeat="(name, param) in tableCtrl.navigation.params">\n        <pre>{{name}} = {{param}}</pre>\n    </li>\n</ul>\n')}]),angular.module("/cf-templates/directives/cf-pagination.html",[]).run(["$templateCache",function(a){a.put("/cf-templates/directives/cf-pagination.html",'<div>\n    <ul class="pagination">\n        <li class="arrow" ng-class="{unavailable: ctrl.pagination.page == 1}">\n            <a ng-click="ctrl.selectPage(ctrl.pagination.page - 1)">&laquo;</a>\n        </li>\n        <li ng-repeat="number in ctrl.pagination.numbers" ng-class="{current: number == ctrl.pagination.page}">\n            <a ng-click="ctrl.selectPage(number)">{{number}}</a>\n        </li>\n        <li class="arrow" ng-class="{unavailable: ctrl.pagination.page >= ctrl.pagination.pages}">\n            <a ng-click="ctrl.selectPage(ctrl.pagination.page + 1)">&raquo;</a>\n        </li>\n    </ul>\n</div>')}]),angular.module("cf-db").controller("LoginController",LoginController),LoginController.$inject=["$window","Request","$route","$routeParams","$location","Navigation","AuthService"];