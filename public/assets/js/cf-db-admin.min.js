function MainConfig(a,b,c){a.when("/Databases/",{templateUrl:"/cf-templates/Databases.html",controller:"DatabaseController",controllerAs:"databaseCtrl","public":!1}).when("/Databases/:databaseName/Tables/",{templateUrl:"/cf-templates/Tables.html",controller:"TableController",controllerAs:"tableCtrl","public":!1}).when("/Tables/:tableName/",{templateUrl:"/cf-templates/Fields.html",controller:"FieldsController",controllerAs:"fieldCtrl","public":!1}).when("/log-in/",{templateUrl:"/cf-templates/Log-In.html",controller:"LoginController",controllerAs:"loginCtrl","public":!0}),b.html5Mode(!0),c.interceptors.push("CodeFireHttpInterceptor")}function RequestWrapper(a,b,c){return{foreground:function(){return arguments&&arguments[0]&&(arguments[0].url=c.apiUrl+c.apiType+"/"+arguments[0].endPoint,arguments[0].loadType="foreground",arguments[0].data.auth=b),a.apply(a,arguments)},background:function(){return arguments&&arguments[0]&&(arguments[0].url=c.apiUrl+c.apiType+"/"+arguments[0].endPoint,arguments[0].loadType="background",arguments[0].data.auth=b),a.apply(a,arguments)},invisible:function(){return arguments&&arguments[0]&&(arguments[0].url=c.apiUrl+c.apiType+"/"+arguments[0].endPoint,arguments[0].loadType="invisible",arguments[0].data.auth=b),a.apply(a,arguments)}}}function Navigation(){return{showView:!0}}function TokenService(){return{token:null}}function SettingService(){return{apiUrl:"/api/",apiType:"dummy"}}function Notify(){return{errors:[],warnings:[],messages:[],error:function(a,b,c){return"undefined"!=typeof console&&null!==console&&console.log("Notify - error : ",a,c,b),this.errors.push({message:a}),this.stackErrors(b)},warning:function(a){return this.warnings.push({message:a})},info:function(a){return this.messages.push({message:a})},stackErrors:function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t;if("object"==typeof a||"array"==typeof a){if(console.log("Notify.stackErrors",a),angular.element("#growls").remove(),a.errors)for(o=a.errors,e=0,i=o.length;i>e;e++)b=o[e],this.errors.push({message:b});if(a.warnings)for(p=a.warnings,f=0,j=p.length;j>f;f++)d=p[f],this.warning(d);if(a.messages)for(q=a.messages,g=0,k=q.length;k>g;g++)c=q[g],this.info(c);if(a.notices)for(r=a.notices,h=0,l=r.length;l>h;h++)c=r[h],this.info(c);if(a.infos){for(s=a.infos,t=[],n=0,m=s.length;m>n;n++)c=s[n],t.push(this.info(c));return t}}},loading:function(a,b){console.log("Notify.loading");var c;return c="#loading-foreground","invisible"===a?!0:("background"===a&&(c="#loading-background"),1!==b&&b!==!0&&(b=0),angular.element(c).toggleClass("showing"))},clear:function(){this.errors=[],this.warnings=[],this.messages=[]}}}function HttpInterceptor(a,b){return{request:function(c){return b.clear(),b.loading(c.loadType,1),c||a.when(c)},requestError:function(c){return b.stackErrors(c.data),a.reject(c)},response:function(c){if(b.stackErrors(c.data),"application/json; charset=utf-8"===c.headers()["content-type"]){var d=examineJSONResponse(c);if(!d)return a.reject(c)}else if("undefined"!=typeof c.config&&"undefined"!=typeof c.config.endPoint&&-1!=c.config.endPoint.indexOf(".json")&&-1==c.headers()["content-type"].indexOf("json"))return b.error("API Returned non-JSON response",{},c.status),a.reject(c);return c},responseError:function(c){return b.loading(rejection.config.loadType,0),b.error(rejection.statusText,rejection.data,rejection.status),a.reject(c)}}}function AuthService(a,b,c){return{loggedIn:!1,bucket:b,login:function(a){var b=this;c.foreground({method:"post",endPoint:"log-in.json",data:{credentials:a}}).success(function(a){"undefined"!=typeof console&&null!==console,1==a.payload.loggedIn&&(b.loggedIn=!0,b.bucket.token=a.payload.token)}).error(function(){"undefined"!=typeof console&&null!==console})},logout:function(){this.loggedIn=!1},isLoggedIn:function(b){return"undefined"==typeof b&&(b=!0),0==this.loggedIn&&1==b&&a.url("/log-in/"),this.loggedIn}}}function MainController(a,b,c,d,e,f,g,h,i){var j;j=this,j.debug="If you can see this, then MainController is working :)",j.dataLoaded=!1,j.location=e,j.route=c,j.errors=[],j.Navigation=f,j.auth=g,j.notifications=i,j.settings=h,g.isLoggedIn(),j.logout=function(){g.logout(),e.url("/log-in/")}}function DatabaseController(a,b,c,d,e,f,g){var h;h=this,h.debug="If you can see this, then DatabaseController is working :)",h.dataLoaded=!1,h.location=e.path(),h.errors=[],h.Navigation=f,h.databases=[],h.params=d,g.isLoggedIn(),h.loadDatabases=function(){b.foreground({method:"post",endPoint:"databases.json",data:{loginData:"test"}}).success(function(a){"undefined"!=typeof console&&null!==console,h.databases=a.payload.databases}).error(function(){"undefined"!=typeof console&&null!==console})},h.loadDatabases()}function TableController(a,b,c,d,e,f,g){var h;h=this,h.debug="If you can see this, then TableController is working :)",h.dataLoaded=!1,h.location=e.path(),h.errors=[],h.Navigation=f,h.tables=[],h.params=d,g.isLoggedIn(),h.loadTables=function(){b.foreground({method:"post",endPoint:"tables.json",data:{loginData:"test"}}).success(function(a){"undefined"!=typeof console&&null!==console,h.tables=a.payload.tables}).error(function(){"undefined"!=typeof console&&null!==console})},h.loadTables()}function FieldsController(a,b,c,d,e,f,g){console.log("Fields Controller");var h;h=this,h.debug="If you can see this, then FieldsController is working :)",h.dataLoaded=!1,h.location=e.path(),h.errors=[],h.Navigation=f,h.fields=[],h.params=d,g.isLoggedIn(),h.loadFields=function(){b.foreground({method:"post",endPoint:"fields.json",data:{loginData:"test"}}).success(function(a){"undefined"!=typeof console&&null!==console,h.fields=a.payload.fields}).error(function(){"undefined"!=typeof console&&null!==console})},h.loadFields()}function LoginController(a,b,c,d,e,f,g){var h;h=this,h.debug="If you can see this, then LoginController is working :)",h.dataLoaded=!1,h.location=e.path(),h.errors=[],h.Navigation=f,h.username="demoUser",h.password="123456789",console.log("login controller ran"),h.login=function(){g.login({username:h.username,password:h.password}),1==g.isLoggedIn(!1)&&e.url("/Databases/")}}angular.module("cf-db",["ngRoute","cf-templates"]).config(MainConfig).factory("Settings",SettingService).factory("Token",TokenService).factory("CodeFireHttpInterceptor",HttpInterceptor).factory("Notify",Notify).factory("Request",RequestWrapper).factory("Navigation",Navigation).factory("AuthService",AuthService).controller("MainController",MainController).controller("DatabaseController",DatabaseController).controller("TableController",TableController).controller("FieldsController",FieldsController),RequestWrapper.$inject=["$http","Token","Settings"],AuthService.$inject=["$location","Token","Request","Navigation"],MainController.$inject=["$window","Request","$route","$routeParams","$location","Navigation","AuthService","Settings","Notify"],DatabaseController.$inject=["$window","Request","$route","$routeParams","$location","Navigation","AuthService"],TableController.$inject=["$window","Request","$route","$routeParams","$location","Navigation","AuthService"],FieldsController.$inject=["$window","Request","$route","$routeParams","$location","Navigation","AuthService"],angular.module("cf-templates",["/cf-templates/Databases.html","/cf-templates/Fields.html","/cf-templates/Log-In.html","/cf-templates/Tables.html"]),angular.module("/cf-templates/Databases.html",[]).run(["$templateCache",function(a){a.put("/cf-templates/Databases.html",'<h2>Databases template</h2>\n<ul>\n    <li>debug : {{databaseCtrl.debug}}</li>\n</ul>\n\n<div ng-show="databaseCtrl.databases">\n\n    <ul>\n        <li ng-repeat="database in databaseCtrl.databases">\n           <a href="/Databases/{{database.name}}/Tables/">{{database.name}}</a>\n        </li>\n    </ul>\n</div>\n\n<ul>\n    <li ng-repeat="(name, param) in databaseCtrl.params">\n        <pre>{{name}} = {{param}}</pre>\n    </li>\n</ul>')}]),angular.module("/cf-templates/Fields.html",[]).run(["$templateCache",function(a){a.put("/cf-templates/Fields.html",'<h2>Fields template</h2>\n<ul>\n    <li>debug : {{fieldCtrl.debug}}</li>\n</ul>\n\n<div ng-show="fieldCtrl.fields">\n    <ul>\n        <li ng-repeat="field in fieldCtrl.fields">\n           {{field.name}} - {{field.type}}\n        </li>\n    </ul>\n</div>\n\n<ul>\n    <li ng-repeat="(name, param) in fieldCtrl.params">\n        <pre>{{name}} = {{param}}</pre>\n    </li>\n</ul>')}]),angular.module("/cf-templates/Log-In.html",[]).run(["$templateCache",function(a){a.put("/cf-templates/Log-In.html",'<h1>Log In</h1>\n\n<div ng-show="!main.auth.loggedIn">\n    <p>This is a temporary login form, just use the sample credentials provided for now.</p>\n    <ul>\n        <li>\n            <label for="username">Username : </label>\n            <input type="text" id="username" ng-model="loginCtrl.username"/>\n        </li>\n        <li>\n            <label for="password">Password : </label>\n            <input type="password" id="password" ng-model="loginCtrl.password"/>\n        </li>\n    </ul>\n    <button class="button" ng-click="loginCtrl.login()">Log in</button>\n</div>\n\n<div ng-show="main.auth.loggedIn">\n    <p>You are now logged in :)</p>\n</div>\n')}]),angular.module("/cf-templates/Tables.html",[]).run(["$templateCache",function(a){a.put("/cf-templates/Tables.html",'<h2>Tables template</h2>\n<ul>\n    <li>debug : {{tableCtrl.debug}}</li>\n</ul>\n\n<div ng-show="tableCtrl.tables">\n\n    <ul>\n        <li ng-repeat="table in tableCtrl.tables">\n           <a href="/Tables/{{table.name}}/">{{table.name}}</a>\n        </li>\n    </ul>\n</div>\n\n<ul>\n    <li ng-repeat="(name, param) in tableCtrl.params">\n        <pre>{{name}} = {{param}}</pre>\n    </li>\n</ul>')}]),angular.module("cf-db").controller("LoginController",LoginController),LoginController.$inject=["$window","Request","$route","$routeParams","$location","Navigation","AuthService"];